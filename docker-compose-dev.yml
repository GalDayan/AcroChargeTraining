version: '3.7'
services:
  ##############
  ## POSTGRES ##
  postgres_db:
    image: postgres
    networks:
      - database
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=demo
    restart: always
    volumes:
      - ./server/database/data/dev:/var/lib/postgresql/data
    container_name: postgres_db
  ##############
  ## SERVER ##
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    networks:
      - webapp
      - database
    ports:
      - 5500:5500
    environment:
      - SECRET="¯\_(ツ)_/¯"
    volumes:
      - ./server/node_modules:/app/node_modules
      - ./server/src:/app/src
    depends_on:
      - postgres_db
    restart: always
    command: ['./wait-for-it.sh', 'postgres_db:5432', '--', 'nodemon', '-L']
    container_name: server
  #############
  ## CLIENT ##
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    env_file:
      - ./client/.env
    volumes:
      - ./client/node_modules:/app/node_modules
      - ./client/src:/app/src
      - ./client/public:/app/public
    networks:
      - webapp
    ports:
      - 3000:3000
    command: npm start
    stdin_open: true
    restart: always
    container_name: client
  #############
  ## PGADMIN ##
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - database
    restart: unless-stopped
networks:
  webapp:
    driver: bridge
  database:
    driver: bridge
volumes:
  pgadmin:
